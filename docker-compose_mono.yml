version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - QDRANT_URL=http://qdrant:6333
      - OLLAMA_URL=http://localhost:11434/api/generate
      - OLLAMA_MODEL=qwen2.5-coder:latest
      - EMBEDDING_MODEL=nomic-embed-text
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=ragdb
      - POSTGRES_USER=raguser
      - POSTGRES_PASSWORD=ragpassword
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_healthy
      ollama:
        condition: service_started

  loader:
    build: ./loader
    volumes:
      - ./volumes/source:/app/source
      - ./volumes/processed:/app/processed
      - ./volumes/logs:/app/logs
    environment:
      - QDRANT_URL=http://qdrant:6333
      - COLLECTION_NAME=documents
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=ragdb
      - POSTGRES_USER=raguser
      - POSTGRES_PASSWORD=ragpassword
    depends_on:
      postgres:
        condition: service_healthy

  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333"]
      interval: 30s
      timeout: 5s
      retries: 3

  ollama:
    image: ollama/ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    command: >
      sh -c "
        ollama pull nomic-embed-text &&
        ollama pull llama3 &&
        /bin/ollama serve
      "

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ragdb
      POSTGRES_USER: raguser
      POSTGRES_PASSWORD: ragpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U raguser -d ragdb"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  qdrant_data:
  ollama_data:
  postgres_data:
  source:
  processed:
  logs: